/*
This file is part of Volantis Mobility Server. 

Volantis Mobility Server is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Volantis Mobility Server is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Volantis Mobility Server.  If not, see <http://www.gnu.org/licenses/>. 
*/
/* ----------------------------------------------------------------------------
 * (c) Volantis Systems Ltd 2005. 
 * ----------------------------------------------------------------------------
 */
package com.volantis.devrep.repository.api.accessors.xml;

import com.volantis.xml.sax.ExtendedSAXException;
import com.volantis.xml.schema.JarFileEntityResolver;
import org.xml.sax.InputSource;

/**
 * An eclipse specific {@link JarFileEntityResolver}.
 * <p>
 * This adds specific eclipse related patches that are required.
 */
public class EclipseEntityResolver extends JarFileEntityResolver {
    /**
     * Patch for mangling of bundleresource URIs in Eclipse 3.0
     */
    private static EclipseBundleresourcePatch
            fixBundleresource =
            new EclipseBundleresourcePatch();

    protected InputSource resolveInputSource(String systemID)
            throws ExtendedSAXException {
        InputSource inputSource = super.resolveInputSource(systemID);

        inputSource = fixBundleresource.cleanBundleresourceURI(
                inputSource, systemID);

        return inputSource;
    }

    /**
     * Patch for incorrect generation of relative URIs in Eclipse v3.0 using
     * the bundleresource:// protocol.
     */
    public static class EclipseBundleresourcePatch {
        /**
         * In cases where no input source has been retrieved, strip any
         * unwanted file:// prefixes from bundleresource URIs and attempt to
         * create a new InputSource from the resulting URI.
         * @param source The input source generated by the entity resolver
         * @param systemID The system ID being resolved
         * @return The input source passed in if it was non-null, otherwise
         *         an input source based on the provided system ID if it was
         *         a mangled bundleresource URI, or null if it was not.
         */
        public InputSource cleanBundleresourceURI(InputSource source, String systemID) {
            if (source == null &&
                    systemID.startsWith("file://bundleresource:")) {
                source = new InputSource(systemID.substring(7));
            }
            return source;
        }
    }
}

/*
 ===========================================================================
 Change History
 ===========================================================================
 $Log$

 13-Dec-05	10345/2	adrianj	VBM:2005111601 Add style rule view

 13-Nov-05	9896/1	geoff	VBM:2005101906 Avoid using JDOM in MCS at runtime: rewrite runtime XML device repository

 ===========================================================================
*/
