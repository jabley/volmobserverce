<?xml version="1.0" standalone="no"?>
<!--
This file is part of Volantis Mobility Server. 

Volantis Mobility Server is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Volantis Mobility Server is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Volantis Mobility Server.  If not, see <http://www.gnu.org/licenses/>. 
-->

<!DOCTYPE script SYSTEM "script.dtd">

<script title="Make sure that multi-level selections don't break when deletions occur">
    <!-- This test operates with a single level proxy that can have selections
         from multiple levels within the DOM to demonstrate that the proxy
         correctly detects and handles the situation where a deletion event
         occurs for the selected child and is correctly ignored when reported
         from the selected ancestor (parent in this case). -->

    <!-- Clear any current selection so that the proxy hierarchy can be
         amended (proxy hierarchies can not be modified with a non-null
         selection) -->
    <applySelection expected="Empty selection"/>

    <!-- Disconnect the middleA proxy to support this strange "multi-level"
         selection scenario -->
    <amendProxy name="middleA"
        action="disconnect"
        expected="Leave only one proxy in the proxy hierarchy"/>

    <!-- Start with a multi-level hierarchy -->
    <applySelection
        expected="Define a selectable hierarchy">
        <topA top1="top level">
            <middleA middle1="nested middle" />
        </topA>
    </applySelection>

    <!-- Now reset the selections within the applied selection -->
    <updateSelection expected="New selection of parent and child">
        <xpath path="topA"/>
        <xpath path="topA/middleA"/>
    </updateSelection>

    <!-- Now delete the nested middleA. It is here that the problem in
         VBM 2004080406 used to occur -->
    <selectionHierarchy action="d" expected="The middle element deleted">
        <pathToSelection context="topA" xpath="middleA"/>
    </selectionHierarchy>

    <!-- Clear any current selection so that the proxy hierarchy can be
         amended (proxy hierarchies can not be modified with a non-null
         selection) -->
    <applySelection expected="Empty selection"/>

    <!-- Now re-connect the middleA proxy in case other tests follow this
         one (they continue with the current state) -->
    <amendProxy name="middleA"
        action="connect"
        expected="Reset the proxy hierarchy to the initial condition"/>
</script>

<!--
 ===========================================================================
 Change History
 ===========================================================================
 $Log$

 08-Dec-04	6416/3	ianw	VBM:2004120703 New Build

 08-Dec-04	6416/1	ianw	VBM:2004120703 New Build

 29-Sep-04	5674/1	philws	VBM:2004080406 Fix proxy element hierarchical source event problem seen with undoing a swap action on the layout editor

 ===========================================================================
-->
