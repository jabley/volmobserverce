<!--
This file is part of Volantis Mobility Server. 

Volantis Mobility Server is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Volantis Mobility Server is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Volantis Mobility Server.  If not, see <http://www.gnu.org/licenses/>. 
-->
<!-- ==========================================================================
 ! This build script contains the standard targets used by the majority of the
 ! MCS subsystems. It is parameterised as detailed below.
 !
 ! This should be included into the subsystem's build.xml file using the
 ! following.
 !
 ! <!DOCTYPE project [
 !   <!ENTITY standard-subsystem-targets SYSTEM "../standard-subsystem-targets.xml">
 ! ]>
 !
 ! <project basedir="." default="all" name="Subsystem name">
 !
 !     &standard-subsystem-targets;
 !
 !     <target name="init">
 !         ... Set up the parameters for this subsystem ...
 !     </target>
 !
 !     ... Any additional targets ...
 !
 ! </project>
 !
 ! The targets provided in here are grouped together as follows:
 !    api.*
 !        These are the targets that build the subsystem's API. That is
 !        the part of the subsystem that is used by other subsystems.
 !
 !    impl.*
 !        These are the targets that build the subsystem's implementation.
 !
 !    unit.*
 !        These are the targets that build the subsystem's unit tests.
 !
 ! Each group has a single property that controls whether it is relevant.
 ! The name of this property is has.<group name>, e.g. the has.api property
 ! controls whether the API group of targets are used. This means that a
 ! subsystem can ignore those targets that are not relevant.
 ! 
 ! TODO Define parameters and names of different targets within group.
 ! 
 ! ======================================================================== -->

    <!-- **********************************************************************
     !                           API Section
     ! ******************************************************************** -->

    <!-- ======================================================================
     ! Initialise API Properties.
     ! ==================================================================== -->
    <target name="api.init"
            depends="init"
            if="has.api">

        <!--
         ! The directory containing the API source files.
         !-->
        <property name="api.src.dir" location="api"/>

        <!--
         ! The API Java source files.
         !-->
        <path id="api.java.src.path" location="${api.src.dir}"/>

        <!--
         ! The API resource files.
         !-->
        <fileset id="api.resource.files" dir="${api.src.dir}">
            <patternset refid="resource-file-patterns"/>
        </fileset>

        <!--
         ! The class path needed to build the API classes.
         !-->
        <path id="api.compile.class.path">
        </path>

        <!--
         ! The top level directory into which all intermediate (excludes jar)
         ! api build files are added.
         !-->
        <property name="api.build.dir" location="${build.dir}/api"/>

        <!--
         ! The location to which the api classes of this subsystem should be
         ! built.
         !-->
        <property name="api.classes.dir"
                  location="${api.build.dir}/classes/api"/>

        <!--
         ! The location to which the api jar of this subsystem should be built.
         !-->
        <property name="api.jar" location="${jar.dir}/mcs-xdime-cp.jar"/>

    </target>

    <!-- ======================================================================
     ! Make the api directories.
     ! ==================================================================== -->
    <target name="api.make.dirs"
            depends="api.init"
            if="has.api">

        <!--
         ! Make the directories needed for the api of this subsystem.
         !-->
        <mkdir dir="${api.classes.dir}"/>
    
    </target>

    <!-- ======================================================================
     ! Compile the api classes.
     ! ==================================================================== -->
    <target name="api.compile.classes"
            depends="api.make.dirs"
            if="has.api">

        <compile destdir="${api.classes.dir}"
                 deprecation="${deprecation}"
                 debug="${debug}"
                 verbose="${verbose}">

            <src refid="api.java.src.path"/>

            <classpath refid="api.compile.class.path"/>

        </compile>

    </target>
    
    <!-- ======================================================================
     ! Build the api jar file.
     ! ==================================================================== -->
    <target name="api.build.jar"
            depends="api.compile.classes"
            if="has.api">

        <jar jarfile="${api.jar}">
            <!-- Include all built class files. -->
            <fileset dir="${api.classes.dir}" includes="**/*"/>

            <!-- Include all resource files. -->
            <fileset refid="api.resource.files"/>
        </jar>    

    </target>

    <!-- ======================================================================
     ! Clean up the api build files.
     ! ==================================================================== -->
    <target name="api.clean"
            depends="api.init"
            if="has.api">

        <delete dir="${api.build.dir}"/>
        <delete file="${api.jar}"/>

    </target>
    
    <!-- **********************************************************************
     !                         Implementation Section
     ! ******************************************************************** -->

    <!-- ======================================================================
     ! Initialise Implementation Properties.
     ! ==================================================================== -->
    <target name="impl.init"
            depends="init"
            if="has.impl">

        <!--
         ! The directory containing the implementation source files.
         !-->
        <property name="impl.src.dir" location="impl"/>

        <!--
         ! The implementation Java source files.
         !-->
        <path id="impl.java.src.path" location="${impl.src.dir}"/>

        <!--
         ! The implementation resource files.
         !-->
        <fileset id="impl.resource.files" dir="${impl.src.dir}">
            <patternset refid="resource-file-patterns"/>
        </fileset>

        <!--
         ! The class path needed to build the implementation classes.
         !-->
        <path id="impl.compile.class.path">
        </path>

        <!--
         ! The top level directory into which all intermediate (excludes jar)
         ! implementation build files are added.
         !-->
        <property name="impl.build.dir" location="${build.dir}/impl"/>

        <!--
         ! The location to which the implementation classes of this subsystem 
         ! should be built.
         !-->
        <property name="impl.classes.dir"
                  location="${impl.build.dir}/classes"/>
  
        <!--
         ! The location to which the implementation jar of this subsystem
         ! should be built.
         !-->
        <property name="impl.jar" location="${jar.dir}/mcs-xdime-cp-impl.jar"/>
    
    </target>

    <!-- ======================================================================
     ! Make the implementation directories.
     ! ==================================================================== -->
    <target name="impl.make.dirs"
            depends="impl.init"
            if="has.impl">

        <!--
         ! Make the directories needed for the implementation of this subsystem.
         !-->
        <mkdir dir="${impl.classes.dir}"/>
    
    </target>

    <!-- ======================================================================
     ! Compile the implementation classes.
     ! ==================================================================== -->
    <target name="impl.compile.classes"
            depends="api.build.jar, impl.make.dirs"
            if="has.impl">

        <compile destdir="${impl.classes.dir}"
                 deprecation="${deprecation}"
                 debug="${debug}"
                 verbose="${verbose}">

            <src refid="impl.java.src.path"/>

            <classpath refid="impl.compile.class.path"/>

        </compile>

    </target>
    
    <!-- ======================================================================
     ! Build the implementation jar file.
     ! ==================================================================== -->
    <target name="impl.build.jar"
            depends="impl.compile.classes"
            if="has.impl">

        <jar jarfile="${impl.jar}">
            <!-- Include all built class files. -->
            <fileset dir="${impl.classes.dir}" includes="**/*"/>

            <!-- Include all resource files. -->
            <fileset refid="impl.resource.files"/>
        </jar>    

    </target>
    
    <!-- ======================================================================
     ! Clean up the implementation build files.
     ! ==================================================================== -->
    <target name="impl.clean"
            depends="impl.init"
            if="has.impl">

        <delete dir="${impl.build.dir}"/>
        <delete file="${impl.jar}"/>

    </target>
    
    <!-- **********************************************************************
     !                         Unit Test Section
     ! ******************************************************************** -->

    <!-- ======================================================================
     ! Initialise Unit Test Properties.
     ! ==================================================================== -->
    <target name="unit.init"
            depends="init"
            if="has.unit">

        <!--
         ! The directory containing the unit test source files.
         !-->
        <property name="unit.src.dir" location="unit"/>

        <!--
         ! The unit test Java source files.
         !-->
        <path id="unit.java.src.path" location="${unit.src.dir}"/>

        <!--
         ! The unit test resource files.
         !-->
        <fileset id="unit.resource.files" dir="${unit.src.dir}">
            <patternset refid="resource-file-patterns"/>
        </fileset>

        <!--
         ! The class path needed to build the unit test classes.
         !-->
        <path id="unit.compile.class.path">
            <pathelement location="../jar/internal/junit.jar"/>
            <pathelement location="../jar/internal/xercesImpl.jar"/>
            <pathelement location="../jar/internal/xmlParserAPIs.jar"/>
            <pathelement location="../jar/internal/xalan.jar"/>
            <pathelement location="../jar/redist/volantis-jdom.jar"/>
            <pathelement location="../jar/internal/synergetics-testtools.jar"/>
            <pathelement location="../jar/redist/synergetics-runtime.jar"/>
        </path>

        <!--
         ! The top level directory into which all intermediate (excludes jar)
         ! unit test build files are added.
         !-->
        <property name="unit.build.dir" location="${build.dir}/unit"/>

        <!--
         ! The location to which the unit test classes of this subsystem 
         ! should be built.
         !-->
        <property name="unit.classes.dir" location="${build.dir}/unit"/>
  
        <!--
         ! The location to which the unit test jar of this subsystem
         ! should be built.
         !-->
        <property name="unit.jar" location="${jar.dir}/mcs-xdime-cp-unit.jar"/>
    
    </target>

    <!-- ======================================================================
     ! Make the unit test directories.
     ! ==================================================================== -->
    <target name="unit.make.dirs"
            depends="unit.init"
            if="has.unit">

        <!--
         ! Make the directories needed for the unit of this subsystem.
         !-->
        <mkdir dir="${unit.classes.dir}"/>
    
    </target>

    <!-- ======================================================================
     ! Compile the unit test classes.
     ! ==================================================================== -->
    <target name="unit.compile.classes"
            depends="impl.build.jar, unit.make.dirs"
            if="has.unit">

        <compile destdir="${unit.classes.dir}"
                 deprecation="${deprecation}"
                 debug="${debug}"
                 verbose="${verbose}">

            <src refid="unit.java.src.path"/>

            <classpath refid="unit.compile.class.path"/>

        </compile>

    </target>
    
    <!-- ======================================================================
     ! Build the unit test jar file.
     ! ==================================================================== -->
    <target name="unit.build.jar"
            depends="unit.compile.classes"
            if="has.unit">

        <jar jarfile="${unit.jar}">
            <!-- Include all built class files. -->
            <fileset dir="${unit.classes.dir}" includes="**/*"/>

            <!-- Include all resource files. -->
            <fileset refid="unit.resource.files"/>
        </jar>    

    </target>

    <!-- ======================================================================
     ! Run the unit tests.
     ! ==================================================================== -->
    <target name="unit.run"
            depends="unit.build.jar"
            if="has.unit">

<!--        <junit printsummary="yes"-->
        

    </target>
    
    <!-- ======================================================================
     ! Clean up the unit test build files.
     ! ==================================================================== -->
    <target name="unit.clean"
            depends="unit.init"
            if="has.unit">

        <delete dir="${unit.build.dir}"/>
        <delete file="${unit.jar}"/>

    </target>

        

    <!-- ======================================================================
     ! Build everything.
     ! ==================================================================== -->
    <target name="all"
            depends="api.build.jar, impl.build.jar, unit.build.jar">
    </target>
    
    <!-- ======================================================================
     ! Clean up everything.
     ! ==================================================================== -->
    <target name="clean"
            depends="api.clean, impl.clean, unit.clean">

        <!-- Delete the top level build directory for this subsystem. -->
        <delete dir="${build.dir}"/>

    </target>

<!--
 ===========================================================================
 Change History
 ===========================================================================
 $Log$

 09-Dec-04	6417/1	philws	VBM:2004120703 Committing tidy up

 16-Jun-04	4630/1	pduffin	VBM:2004060306 Added architecture subsystem

 08-Jun-04	4630/4	pduffin	VBM:2004060306 Added some constants

 07-Jun-04	4630/2	pduffin	VBM:2004060306 Added framework for XDIME-CP interim solution

 ===========================================================================
-->
