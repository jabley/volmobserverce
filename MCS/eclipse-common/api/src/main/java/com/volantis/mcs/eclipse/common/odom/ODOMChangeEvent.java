/*
This file is part of Volantis Mobility Server. 

Volantis Mobility Server is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Volantis Mobility Server is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Volantis Mobility Server.  If not, see <http://www.gnu.org/licenses/>. 
*/
/* ----------------------------------------------------------------------------
 * (c) Volantis Systems Ltd 2003. 
 * ----------------------------------------------------------------------------
 */
package com.volantis.mcs.eclipse.common.odom;

import com.volantis.mcs.xml.xpath.XPath;
import com.volantis.mcs.eclipse.common.odom.xpath.ODOMXPath;


/**
 * An event generated by an ODOM change.
 * <p>
 * Because the source must be an {@link ODOMObservable} implementation this
 * class does not extend {@link java.util.EventObject} which assumes the source
 * is just an Object.
 * </p>
 */
public class ODOMChangeEvent {
    /**
     * The source for the change event. Must be defined.
     *
     * @link association
     * @supplierCardinality 1
     * @supplierRole source
     */
    private final ODOMObservable source;

    /**
     * The old value for the item that has changed. May be null.
     *
     * @link association
     * @supplierCardinality 0..1
     * @supplierRole oldValue
     */
    private final Object oldValue;

    /**
     * The new value for the item that has changed. May be null.
     *
     * @link association
     * @supplierCardinality 0..1
     * @supplierRole newValue
     */
    private final Object newValue;

    /**
     * The qualifier for the change event.
     *
     * @link association
     * @supplierCardinality 1
     * @supplierRole changeQualifier
     */
    private final ChangeQualifier changeQualifier;


    /**
     * Factory method that creates a new instance using the given parameters.
     * <p/>
     * If the changeQualifier value is {@link 
     * com.volantis.mcs.eclipse.common.odom.ChangeQualifier#HIERARCHY} this
     * method guarantees to return an instance of {@link
     * ODOMHierarchyChangeEvent} </p>
     *
     * @param source          the ODOMObservable object within which the change
     *                        has occurred.
     * @param oldValue        the value prior to the change happening
     * @param newValue        the value after the change has happened
     * @param changeQualifier the aspect of the object that has changed. A null
     *                        value will be treated as if {@link
     *                        com.volantis.mcs.eclipse.common.odom.ChangeQualifier#NONE} 
     *                        was specified
     * @throws IllegalArgumentException if the source parameter is null
     */
    public static ODOMChangeEvent createNew(ODOMObservable source,
                                            Object oldValue,
                                            Object newValue,
                                            ChangeQualifier changeQualifier) {

        if (changeQualifier == ChangeQualifier.HIERARCHY) {
            return new ODOMHierarchyChangeEvent(source, oldValue, newValue);
        } else {

            return new ODOMChangeEvent(source,
                    oldValue,
                    newValue,
                    ((changeQualifier != null) ?
                    changeQualifier :
                    ChangeQualifier.NONE));
        }
    }


    /**
     * Protected constructor. ODOMChangeEvent should only be created via the
     * factory method
     *
     * @see #createNew
     */
    protected ODOMChangeEvent(ODOMObservable source,
                              Object oldValue,
                              Object newValue,
                              ChangeQualifier changeQualifier) {
        if (source == null) {
            throw new IllegalArgumentException(
                    "source for event must be specified"); //$NON-NLS-1$
        } else {
            this.source = source;
            this.oldValue = oldValue;
            this.newValue = newValue;
            this.changeQualifier = changeQualifier;
        }
    }


    // javadoc unnecessary
    public ODOMObservable getSource() {
        return source;
    }


    // javadoc unnecessary
    public Object getOldValue() {
        return oldValue;
    }


    // javadoc unnecessary
    public Object getNewValue() {
        return newValue;
    }


    // javadoc unnecessary
    public ChangeQualifier getChangeQualifier() {
        return changeQualifier;
    }


    /**
     * Modifies the source of the event, by undoing the modifications that
     * generated this event.
     * <p/>
     * This method should be used with care, it has been designed to be used by
     * the {@link com.volantis.mcs.eclipse.common.odom.undo.UndoRedoManager}
     * </p>.
     * @return an XPath to the node that was the source of the event,
     * or null if this undo invocation resulted in that node being removed from its
     * document.
     */
    public XPath undo() {
        if (changeQualifier == ChangeQualifier.TEXT) {
            ODOMText odomText = (ODOMText) source;
            odomText.setText((String) oldValue);
        } else if (changeQualifier == ChangeQualifier.ATTRIBUTE_VALUE) {
            ODOMAttribute odomAttribute = (ODOMAttribute) source;
            odomAttribute.setValue((String) oldValue);
        } else { //assertion failed
            throw new UnsupportedOperationException("Unsupported ChangeQualifier " + //$NON-NLS-1$
                    changeQualifier);
        }
        //we never return null here but subclasses can
        return new ODOMXPath(source);
    }


    /**
     * Modifies the source of the event, by redoing the modifications that were
     * undone using {@link #undo()}.
     * <p/>
     * This method should be used with care, it has been designed to be used by
     * the {@link com.volantis.mcs.eclipse.common.odom.undo.UndoRedoManager}
     * </p>.
     * @return an XPath to the node that was the source of the event,
     * or null if this redo invocation resulted in that node being removed from its
     * document.
     */
    public XPath redo() {
        if (changeQualifier == ChangeQualifier.TEXT) {
            ODOMText odomText = (ODOMText) source;
            odomText.setText((String) newValue);
        } else if (changeQualifier == ChangeQualifier.ATTRIBUTE_VALUE) {
            ODOMAttribute odomAttribute = (ODOMAttribute) source;
            odomAttribute.setValue((String) newValue);
        } else { //assertion failed
            throw new UnsupportedOperationException("Unsupported ChangeQualifier " + //$NON-NLS-1$
                    changeQualifier);
        }
        //we never return null here but subclasses can
        return new ODOMXPath(source);
    }

    /**
     * For debug purposes only.
     * @return string version of the object
     */
    public String toString() {
        return new StringBuffer("source: ").
                append(source.getName()).
                append(", old: ").
                append(oldValue).
                append(", new: ").
                append(newValue).
                append(", qualifier: ").
                append(changeQualifier.toString()).toString();
    }
}


/*
 ===========================================================================
 Change History
 ===========================================================================
 $Log$

 21-Dec-04	6524/1	allan	VBM:2004112610 Move xpath and xml validation out of eclipse

 08-Dec-04	6416/3	ianw	VBM:2004120703 New Build

 08-Dec-04	6416/1	ianw	VBM:2004120703 New Build

 23-Mar-04	3362/1	steve	VBM:2003082208 Move API doclet to Synergetics and myriads of javadoc fixes

 12-Feb-04	2915/2	pcameron	VBM:2004020905 Refactored GridFormatComposite to use the State pattern for grid mods

 09-Feb-04	2800/5	eduardo	VBM:2004012802 undo redo works from outline view

 05-Feb-04	2800/3	eduardo	VBM:2004012802 undo redo hooked in eclipse with demarcation. Designed just for single page editors

 03-Feb-04	2820/1	doug	VBM:2004013002 Used the eclipse 'externalize strings wizard' to identify language specific resources

 29-Jan-04	2689/4	eduardo	VBM:2003112407 formatting changes

 29-Jan-04	2689/2	eduardo	VBM:2003112407 undo/redo manager for ODOM

 04-Nov-03	1613/1	philws	VBM:2003102101 Observable DOM

 ===========================================================================
*/
