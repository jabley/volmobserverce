<?xml version="1.0" encoding="UTF-8"?>
<!--
This file is part of Volantis Mobility Server. 

Volantis Mobility Server is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Volantis Mobility Server is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Volantis Mobility Server.  If not, see <http://www.gnu.org/licenses/>. 
-->

<xs:schema targetNamespace="http://www.volantis.com/xmlns/2004/12/meta-data-types" xmlns:mdv="http://www.volantis.com/xmlns/2004/12/meta-data-values" xmlns="http://www.volantis.com/xmlns/2004/12/meta-data-types" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:mdt="http://www.volantis.com/xmlns/2004/12/meta-data-types" elementFormDefault="qualified" attributeFormDefault="unqualified">
    <xs:import namespace="http://www.volantis.com/xmlns/2004/12/meta-data-values" schemaLocation="meta-data-values.xsd"/>
    <xs:element name="BaseTypeElement" abstract="true">
        <xs:annotation>
            <xs:documentation>Element that defines the substitution group that contains all type definition elements.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="BaseSimpleTypeElement" abstract="true" substitutionGroup="BaseTypeElement">
        <xs:annotation>
            <xs:documentation>Element that defines the substitution group that contains all simple type definition elements.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="BaseCompositeTypeElement" abstract="true" substitutionGroup="BaseTypeElement">
        <xs:annotation>
            <xs:documentation>Element that defines the substitution group that contains all composite type definition elements.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:group name="AnyType">
        <xs:annotation>
            <xs:documentation>A group containing any type.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="BaseTypeElement"/>
        </xs:sequence>
    </xs:group>
    <xs:complexType name="BaseType">
        <xs:annotation>
            <xs:documentation>Base type for all elements that represent a type.</xs:documentation>
        </xs:annotation>
    </xs:complexType>
    <xs:complexType name="BaseSimpleType">
        <xs:annotation>
            <xs:documentation>Base type for all elements that represent a simple type.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseType">
                <xs:sequence>
                    <xs:element ref="enumeratedConstraint" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="BaseCompositeType">
        <xs:annotation>
            <xs:documentation>Base type for all elements that represent a composite type.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="BaseCollectionType">
        <xs:annotation>
            <xs:documentation>Base type for all elements that represent a set type.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseCompositeType">
                <xs:sequence>
                    <xs:element ref="memberTypeConstraint" minOccurs="0"/>
                    <xs:element ref="minimumLengthConstraint" minOccurs="0"/>
                    <xs:element ref="maximumLengthConstraint" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="RangeConstraintType">
        <xs:annotation>
            <xs:documentation>General constraint on the range of a number type.</xs:documentation>
            <xs:documentation>The limit of this constraint is defined as a child element.</xs:documentation>
        </xs:annotation>
        <xs:group ref="mdv:NumberElements"/>
        <xs:attribute name="inclusive" type="xs:boolean" use="required">
            <xs:annotation>
                <xs:documentation>Indicates whether the allowable value includes this value, or not. If true then it does, otherwise it does not.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="BaseNumberType">
        <xs:annotation>
            <xs:documentation>Base type for all elements that represent a number type.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSimpleType">
                <xs:sequence>
                    <xs:element ref="numberSubTypeConstraint" minOccurs="0"/>
                    <xs:element ref="minimumValueConstraint" minOccurs="0"/>
                    <xs:element ref="maximumValueConstraint" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="BaseStringType">
        <xs:annotation>
            <xs:documentation>Base type for all elements that represent a number type.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseSimpleType">
                <xs:sequence>
                    <xs:element ref="minimumLengthConstraint" minOccurs="0"/>
                    <xs:element ref="maximumLengthConstraint" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="minimumValueConstraint" type="RangeConstraintType">
        <xs:annotation>
            <xs:documentation>Constraint on the minimum value of a number type.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="maximumValueConstraint" type="RangeConstraintType">
        <xs:annotation>
            <xs:documentation>Constraint on the maximum value of a number type.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="numberSubTypeConstraint">
        <xs:annotation>
            <xs:documentation>Constraint on the sub type of number.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="false">
            <xs:attribute name="subType" use="required">
                <xs:annotation>
                    <xs:documentation>Indicates the specific type of number allowed.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="byte">
                            <xs:annotation>
                                <xs:documentation>The allowable range is the same as for java.lang.Byte.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="short">
                            <xs:annotation>
                                <xs:documentation>The allowable range is the same as for java.lang.Short.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="int">
                            <xs:annotation>
                                <xs:documentation>The allowable range is the same as for java.lang.Integer.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="long">
                            <xs:annotation>
                                <xs:documentation>The allowable range is the same as for java.lang.Long.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="float">
                            <xs:annotation>
                                <xs:documentation>The allowable range is the same as for java.lang.Float.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="double">
                            <xs:annotation>
                                <xs:documentation>The allowable range is the same as for java.lang.Double.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="integer">
                            <xs:annotation>
                                <xs:documentation>The allowable range is the same as for java.math.BigInteger.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="decimal">
                            <xs:annotation>
                                <xs:documentation>The allowable range is the same as for java.math.BigDecimal.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                    </xs:restriction>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="enumeratedConstraint">
        <xs:annotation>
            <xs:documentation>Constraint on the allowable values of a type.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="mdv:BaseSimpleValueElement" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="uniqueMemberConstraint">
        <xs:annotation>
            <xs:documentation>Constraint on the uniqueness of elements within a list.</xs:documentation>
        </xs:annotation>
        <xs:complexType mixed="false"/>
    </xs:element>
    <xs:element name="memberTypeConstraint">
        <xs:annotation>
            <xs:documentation>Constraint on the allowable members of a collection.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="BaseTypeElement"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="minimumLengthConstraint">
        <xs:annotation>
            <xs:documentation>Constraint on the allowable minimum length of a collection or string.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="limit" type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="maximumLengthConstraint">
        <xs:annotation>
            <xs:documentation>Constraint on the allowable maximum length of a collection or string.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="limit" type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="number" type="BaseNumberType" substitutionGroup="BaseSimpleTypeElement">
        <xs:annotation>
            <xs:documentation>Number type.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="boolean" type="BaseSimpleType" substitutionGroup="BaseSimpleTypeElement">
        <xs:annotation>
            <xs:documentation>Boolean type.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="string" type="BaseStringType" substitutionGroup="BaseSimpleTypeElement">
        <xs:annotation>
            <xs:documentation>String type.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="quantity" substitutionGroup="BaseSimpleTypeElement">
        <xs:annotation>
            <xs:documentation>Quantity type.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="BaseType">
                    <xs:sequence>
                        <xs:element ref="magnitude"/>
                        <xs:element ref="unit"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="magnitude" type="BaseNumberType">
        <xs:annotation>
            <xs:documentation>Magnitude of the quantity.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="unit" type="BaseSimpleType">
        <xs:annotation>
            <xs:documentation>Defines the allowable units for the quantity type.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="structure" substitutionGroup="BaseCompositeTypeElement">
        <xs:annotation>
            <xs:documentation>Structure type.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="BaseCompositeType">
                    <xs:sequence>
                        <xs:element ref="field" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="field">
        <xs:annotation>
            <xs:documentation>Definition of a field within a structure type.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="BaseTypeElement"/>
            </xs:sequence>
            <xs:attribute name="name" type="xs:NCName" use="required">
                <xs:annotation>
                    <xs:documentation>The name of the field.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="list" substitutionGroup="BaseCompositeTypeElement">
        <xs:annotation>
            <xs:documentation>List type.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="mdt:BaseCollectionType">
                    <xs:sequence>
                        <xs:element ref="uniqueMemberConstraint" minOccurs="0"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="set" type="mdt:BaseCollectionType" substitutionGroup="BaseCompositeTypeElement">
        <xs:annotation>
            <xs:documentation>Set type.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="choice" substitutionGroup="BaseTypeElement">
        <xs:annotation>
            <xs:documentation>Choice type.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="BaseCompositeType">
                    <xs:sequence>
                        <xs:element ref="choiceDefinition" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="choiceDefinition">
        <xs:annotation>
            <xs:documentation>Definition of a choice within a choice type.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="BaseTypeElement"/>
            </xs:sequence>
            <xs:attribute name="name" type="xs:NCName" use="required">
                <xs:annotation>
                    <xs:documentation>The name of the field.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
</xs:schema>
