<?xml version="1.0" encoding="UTF-8"?>
<!--
This file is part of Volantis Mobility Server. 

Volantis Mobility Server is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Volantis Mobility Server is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Volantis Mobility Server.  If not, see <http://www.gnu.org/licenses/>. 
-->

<!-- edited with XMLSPY v5 rel. 4 U (http://www.xmlspy.com) by Paul Duffin (Volantis) -->
<xs:schema targetNamespace="http://www.volantis.com/xmlns/mcs/config" xmlns="http://www.volantis.com/xmlns/mcs/config" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:mcscfg="http://www.volantis.com/xmlns/mcs/config" elementFormDefault="qualified" attributeFormDefault="unqualified">
    <xs:complexType name="Project">
        <xs:sequence>
            <xs:element name="fallback-project" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Specifies details of the fallback project.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:attribute name="name" type="xs:anyURI" use="required">
                        <xs:annotation>
                            <xs:documentation>The name of the fallback project. It is an error if this does not match the name of another project. It is also an error if the project fallbacks form a cycle.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:choice>
                <xs:element ref="xml-policies"/>
                <xs:element ref="jdbc-policies"/>
                <xs:element name="remote-policies">
                    <xs:annotation>
                        <xs:documentation>Indicates that the project's policies are stored in a remote repository.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="preload" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                    <xs:documentation>Specifies the policies to preload from the remote repository.</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                    <xs:attribute name="url" type="xs:anyURI" use="required">
                                        <xs:annotation>
                                            <xs:documentation>A URL that will cause the remote repository to send a set of policy definitions that will be preloaded into the cache.</xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="policy-base-url" type="xs:anyURI" use="required">
                            <xs:annotation>
                                <xs:documentation>The base URL of all the remote policies that belong within this project. The URL to a policy definition resource is constructed by resolving the project relative URL for the component against this base URLThe resulting URL is used to retrieve the policy definition resource.</xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
            <xs:element ref="assets" minOccurs="0"/>
            <xs:element ref="generated-resources" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="preload" type="xs:boolean" use="optional">
            <xs:annotation>
                <xs:documentation>Controls whether the contents of a project are preloaded into the caches during the initialisation of the MCS application. If set to true then they are, otherwise they are not.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:element name="projects">
        <xs:annotation>
            <xs:documentation>Contains configuration relating to projects.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="default" type="Project">
                    <xs:annotation>
                        <xs:documentation>Specifies the default project to use in this instance of MCS.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element ref="project" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
        <xs:key name="PredefinedProjectName">
            <xs:selector xpath="./mcscfg:project"/>
            <xs:field xpath="@name"/>
        </xs:key>
        <xs:keyref name="FallbackProject" refer="mcscfg:PredefinedProjectName">
            <xs:selector xpath="./*/mcscfg:fallback-project"/>
            <xs:field xpath="@name"/>
        </xs:keyref>
    </xs:element>
    <xs:element name="xml-policies">
        <xs:annotation>
            <xs:documentation>Indicates that the project's policies are stored as XML.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="directory" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>Specifies the root directory containing the policies.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="jdbc-policies">
        <xs:annotation>
            <xs:documentation>Indicates thet the project's policies are stored in a JDBC database.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="name" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the project within the jdbc repository.
</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="project">
        <xs:annotation>
            <xs:documentation>Predefined project configuration.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="Project">
                    <xs:attribute name="name" type="xs:anyURI" use="required">
                        <xs:annotation>
                            <xs:documentation>The well defined name of the project.</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <!-- ======================================================================
     !         Asset Related Definitions
     ! ==================================================================== -->
    <xs:complexType name="Asset">
        <xs:annotation>
            <xs:documentation>Asset configuration.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="prefix-url" type="xs:anyURI" use="optional">
            <xs:annotation>
                <xs:documentation>The default prefix to use for assets of this specific type that do not belong to an asset group.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:element name="assets">
        <xs:annotation>
            <xs:documentation>Project specific configuration relating to assets.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:all>
                <xs:element ref="audio-assets" minOccurs="0"/>
                <xs:element ref="dynamic-visual-assets" minOccurs="0"/>
                <xs:element ref="image-assets" minOccurs="0"/>
                <xs:element ref="script-assets" minOccurs="0"/>
                <xs:element ref="text-assets" minOccurs="0"/>
            </xs:all>
            <xs:attribute name="base-url" type="xs:anyURI" use="optional">
                <xs:annotation>
                    <xs:documentation>Specifies the base URL for assets belonging to the enclosing project.

It is used to resolve host relative server side asset URLs against after they have been constructed from the asset and asset group meta data but before any custom AssetURLRewriters are executed.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    <xs:element name="audio-assets" type="Asset">
        <xs:annotation>
            <xs:documentation>Audio asset configuration.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="dynamic-visual-assets" type="Asset">
        <xs:annotation>
            <xs:documentation>Dynamic visual asset configuration.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="image-assets" type="Asset">
        <xs:annotation>
            <xs:documentation>Image asset configuration.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="script-assets" type="Asset">
        <xs:annotation>
            <xs:documentation>Script asset configuration.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="text-assets" type="Asset">
        <xs:annotation>
            <xs:documentation>Text asset configuration.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="generated-resources">
        <xs:annotation>
            <xs:documentation>Defines Base directory for generated resources (will contain scripts,modesets and stylesheets in the future)</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="base-dir" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>Defines the relative directory to append to the app server base directory for storing generated resources</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
</xs:schema>
