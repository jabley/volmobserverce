<?xml version="1.0" encoding="UTF-8"?>
<!--
This file is part of Volantis Mobility Server. 

Volantis Mobility Server is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Volantis Mobility Server is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Volantis Mobility Server.  If not, see <http://www.gnu.org/licenses/>. 
-->

<xs:schema targetNamespace="http://vine.uk.volantis.com/architecture/document/xmlns/ThemeInfo" xmlns:ad="http://vine.uk.volantis.com/architecture/document/xmlns/ArchitectureDocument" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://vine.uk.volantis.com/architecture/document/xmlns/ThemeInfo" elementFormDefault="qualified" attributeFormDefault="unqualified">
    <xs:import namespace="http://vine.uk.volantis.com/architecture/document/xmlns/ArchitectureDocument" schemaLocation="../../xml-schema/document/ArchitectureDocumentCore.xsd"/>
    <xs:element name="themeDefinition">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="typeDefinition" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="property" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="element" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="description" type="ad:Flow"/>
    <xs:attributeGroup name="CommonAttributes">
        <xs:attribute name="specification" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="CSS 2"/>
                    <xs:enumeration value="CSS 2.1"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="documentation" type="xs:anyURI" use="optional"/>
    </xs:attributeGroup>
    <!--Property Type Definitions-->
    <xs:element name="typeDefinition">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="name"/>
                <xs:element ref="type"/>
            </xs:sequence>
            <xs:attributeGroup ref="CommonAttributes"/>
        </xs:complexType>
    </xs:element>
    <!--Property Definitions-->
    <xs:element name="property" substitutionGroup="ad:BaseSectionElement">
        <xs:annotation>
            <xs:documentation>Definition of a property</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="name"/>
                <xs:element ref="type"/>
                <xs:element ref="initialValue"/>
                <xs:element ref="appliesTo"/>
                <xs:element ref="inherited"/>
                <xs:element ref="percentages" minOccurs="0"/>
                <xs:element ref="media"/>
                <xs:element ref="specifications"/>
                <xs:element ref="description"/>
                <xs:element ref="references" minOccurs="0"/>
            </xs:sequence>
            <xs:attributeGroup ref="CommonAttributes"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="name" type="xs:NCName"/>
    <xs:element name="type">
        <xs:complexType>
            <xs:group ref="AnyType"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="inherited" type="xs:boolean">
        <xs:annotation>
            <xs:documentation>Indicates whether this property inherits by default</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="initialValue">
        <xs:complexType>
            <xs:group ref="AnyValue"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="appliesTo">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="display" type="xs:NCName"/>
                <xs:element name="replaced">
                    <xs:complexType mixed="false"/>
                </xs:element>
                <xs:element name="element" type="xs:NCName"/>
                <xs:element name="focusable">
                    <xs:complexType mixed="false"/>
                </xs:element>
                <xs:element name="formField">
                    <xs:complexType mixed="false"/>
                </xs:element>
                <xs:element name="list">
                    <xs:complexType mixed="false"/>
                </xs:element>
                <xs:element name="selection">
                    <xs:complexType mixed="false"/>
                </xs:element>
                <xs:element ref="pseudo-element"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <xs:element name="percentages">
        <xs:complexType>
            <xs:sequence>
                <xs:choice>
                    <xs:element ref="selfBox"/>
                    <xs:element ref="containingBlock"/>
                    <xs:element ref="parentElement"/>
                    <xs:element ref="device"/>
                    <xs:element ref="propertyRef"/>
                </xs:choice>
                <xs:element ref="description" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="media">
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:enumeration value="visual"/>
                <xs:enumeration value="aural"/>
                <xs:enumeration value="all"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="references" type="ad:Flow"/>
    <xs:element name="keywords" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="keyword" maxOccurs="unbounded"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
        <xs:key name="keywordGroup-KeywordDefinitions">
            <xs:selector xpath="keyword"/>
            <xs:field xpath="name"/>
        </xs:key>
    </xs:element>
    <!--Property Value Types-->
    <xs:simpleType name="KeywordName">
        <xs:union memberTypes="xs:NCName xs:nonNegativeInteger"/>
    </xs:simpleType>
    <xs:group name="SimpleTypes">
        <xs:choice>
            <xs:element ref="angleType"/>
            <xs:element ref="colorType"/>
            <xs:element ref="functionCallType"/>
            <xs:element ref="integerType"/>
            <xs:element ref="keywords"/>
            <xs:element ref="lengthType"/>
            <xs:element ref="mcsComponentURIType"/>
            <xs:element ref="mcsTranscodableURIType"/>
            <xs:element ref="numberType"/>
            <xs:element ref="percentageType"/>
            <xs:element ref="stringType"/>
            <xs:element ref="timeType"/>
            <xs:element ref="typeRef"/>
            <xs:element ref="uriType"/>
            <xs:element ref="fractionType"/>
            <xs:element ref="frequencyType"/>
        </xs:choice>
    </xs:group>
    <xs:element name="AbstractTypeElement" abstract="true" substitutionGroup="ad:BaseInlineElement"/>
    <xs:group name="CompositeTypes">
        <xs:choice>
            <xs:element ref="choiceType"/>
            <xs:element ref="listType"/>
            <xs:element ref="orderedSetType"/>
            <xs:element ref="pairType"/>
            <xs:element ref="fractionType"/>
        </xs:choice>
    </xs:group>
    <xs:group name="AnyType">
        <xs:choice>
            <xs:group ref="SimpleTypes"/>
            <xs:group ref="CompositeTypes"/>
        </xs:choice>
    </xs:group>
    <xs:element name="angleType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="description" minOccurs="0"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="choiceType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:group ref="AnyType" maxOccurs="unbounded"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="colorType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="description" minOccurs="0"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="functionCallType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="description" minOccurs="0"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="integerType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="description" minOccurs="0"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="keyword">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="name" type="KeywordName"/>
                <xs:element ref="specifications" minOccurs="0"/>
                <xs:element ref="description" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="enumeration" type="xs:nonNegativeInteger" use="optional"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="lengthType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="description" minOccurs="0"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="listType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="AnyType"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="mcsComponentURIType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="description" minOccurs="0"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="mcsTranscodableURIType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="description" minOccurs="0"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="numberType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="description" minOccurs="0"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="orderedSetType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="AnyType"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="pairType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="first">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="name"/>
                            <xs:group ref="AnyType"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="second">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element ref="name"/>
                            <xs:group ref="AnyType"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="percentageType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="description" minOccurs="0"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="stringType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="description" minOccurs="0"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="timeType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="description" minOccurs="0"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="typeRef" type="xs:NCName" substitutionGroup="AbstractTypeElement"/>
    <xs:element name="uriType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="description" minOccurs="0"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="fractionType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="numerator">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:group ref="AnyType"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="denominator">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:group ref="AnyType"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="frequencyType" substitutionGroup="AbstractTypeElement">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="description" minOccurs="0"/>
                <xs:element ref="specifications" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!--Property Values-->
    <xs:group name="SimpleValues">
        <xs:choice>
            <xs:element ref="angleValue"/>
            <xs:element ref="colorValue"/>
            <xs:element ref="inheritValue"/>
            <xs:element ref="integerValue"/>
            <xs:element ref="keywordRef"/>
            <xs:element ref="lengthValue"/>
            <xs:element ref="numberValue"/>
            <xs:element ref="percentageValue"/>
            <xs:element ref="stringValue"/>
            <xs:element ref="timeValue"/>
            <xs:element ref="frequencyValue"/>
        </xs:choice>
    </xs:group>
    <xs:group name="CompositeValues">
        <xs:choice>
            <xs:element ref="pairValue"/>
            <xs:element ref="listValue"/>
            <xs:element ref="fractionValue"/>
        </xs:choice>
    </xs:group>
    <xs:group name="AnyValue">
        <xs:choice>
            <xs:group ref="SimpleValues"/>
            <xs:group ref="CompositeValues"/>
            <xs:element ref="propertyRef"/>
            <xs:element ref="computedRef"/>
            <xs:element ref="dependentValue"/>
            <xs:element ref="emptyList"/>
        </xs:choice>
    </xs:group>
    <xs:element name="angleValue">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:double">
                    <xs:attribute name="units" use="required">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="deg"/>
                                <xs:enumeration value="grad"/>
                                <xs:enumeration value="rad"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="colorValue" type="xs:string"/>
    <xs:element name="dependentValue">
        <xs:complexType>
            <xs:attribute name="userAgent" type="xs:boolean" use="optional"/>
            <xs:attribute name="writingDirection" type="xs:boolean" use="optional"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="emptyList">
        <xs:complexType mixed="false"/>
    </xs:element>
    <xs:element name="inheritValue">
        <xs:complexType mixed="false"/>
    </xs:element>
    <xs:element name="integerValue" type="xs:int"/>
    <xs:element name="keywordRef" substitutionGroup="ad:BaseInlineElement">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="KeywordName">
                    <xs:attribute name="property" type="xs:NCName" use="optional"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="lengthValue">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:double">
                    <xs:attribute name="units" use="required">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="mm"/>
                                <xs:enumeration value="cm"/>
                                <xs:enumeration value="pt"/>
                                <xs:enumeration value="pc"/>
                                <xs:enumeration value="em"/>
                                <xs:enumeration value="ex"/>
                                <xs:enumeration value="px"/>
                                <xs:enumeration value="in"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="numberValue" type="xs:double"/>
    <xs:element name="pairValue">
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="SimpleValues" maxOccurs="2"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
     <xs:element name="listValue">
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="SimpleValues" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="percentageValue" type="xs:double"/>
    <xs:element name="stringValue" type="xs:string"/>
    <xs:element name="timeValue">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:double">
                    <xs:attribute name="units" use="required">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="ms"/>
                                <xs:enumeration value="s"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="fractionValue">
        <xs:complexType>
            <xs:sequence>
                <xs:group ref="SimpleValues" minOccurs="2" maxOccurs="2"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="frequencyValue">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:number">
                    <xs:attribute name="units" use="required">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="Hz"/>
                                <xs:enumeration value="kHz"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <!--Percentage-->
    <xs:element name="containingBlock">
        <xs:complexType>
            <xs:choice>
                <xs:element ref="propertyRef"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <xs:element name="device">
        <xs:complexType>
            <xs:choice>
                <xs:element ref="propertyRef"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <xs:element name="parentElement">
        <xs:complexType>
            <xs:choice>
                <xs:element ref="propertyRef"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <xs:element name="selfBox">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element ref="propertyRef"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <!--Application information-->
    <xs:element name="element">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="name"/>
                <xs:element name="display" type="xs:NCName"/>
                <xs:sequence minOccurs="0">
                    <xs:element name="isFocusable" type="xs:boolean" minOccurs="0"/>
                    <xs:element name="isFormField" type="xs:boolean" minOccurs="0"/>
                    <xs:element name="isLink" type="xs:boolean" minOccurs="0"/>
                    <xs:element name="isList" type="xs:boolean" minOccurs="0"/>
                    <xs:element name="isReplaced" type="xs:boolean" minOccurs="0"/>
                    <xs:element name="isSelection" type="xs:boolean" minOccurs="0"/>
                </xs:sequence>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!--
    <xs:group name="ElementReference">
        <xs:choice>
            <xs:element ref="elementRef"/>
            <xs:element ref="elementGroupRef"/>
        </xs:choice>
    </xs:group>
    <xs:element name="elementGroup">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="name"/>
                <xs:group ref="ElementReference" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="elementRef" type="xs:NCName"/>
    <xs:element name="elementGroupRef" type="xs:NCName"/>
    <xs:element name="propertyGroup">
        <xs:annotation>
            <xs:documentation>A group of style properties</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="name"/>
                <xs:group ref="PropertyReference" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    -->
    <!--References-->
    <!--
    <xs:group name="PropertyReference">
        <xs:choice>
            <xs:element ref="propertyGroupRef"/>
            <xs:element ref="propertyRef"/>
        </xs:choice>
    </xs:group>
    <xs:element name="propertyGroupRef" type="xs:NCName"/>
    -->
    <xs:element name="propertyRef" type="xs:NCName" substitutionGroup="ad:BaseInlineElement"/>
    <xs:element name="computedRef">
        <xs:annotation>
            <xs:documentation>Contains a property reference and a set of translation rules.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="name"/>
                <xs:element name="rule" minOccurs="1" maxOccurs="unbounded"></xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="rule">
        <xs:annotation>
            <xs:documentation>A single translation rule for a computed mapping.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="from" type="xs:NCName"/>
                <xs:element name="to" type="xs:NCName"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="shorthandRef" type="xs:NCName" substitutionGroup="ad:BaseInlineElement"/>
    <xs:element name="specifications">
        <xs:annotation>
            <xs:documentation>Contains indication of which specifications this is supported in. All properties apart from MCS specific ones are at least part of CSS 2.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="css1" minOccurs="0">
                    <xs:complexType mixed="false"/>
                </xs:element>
                <xs:element name="css2" minOccurs="0">
                    <xs:complexType mixed="false"/>
                </xs:element>
                <xs:element name="cssMobileProfile" minOccurs="0">
                    <xs:complexType mixed="false"/>
                </xs:element>
                <xs:element name="cssWap" minOccurs="0">
                    <xs:complexType mixed="false"/>
                </xs:element>
                <xs:element name="mcs" minOccurs="0">
                    <xs:complexType mixed="false"/>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!--Pseudo Classes and Elements-->
    <xs:element name="pseudo-class" type="xs:NCName" substitutionGroup="ad:BaseInlineElement"/>
    <xs:element name="pseudo-element" type="xs:NCName" substitutionGroup="ad:BaseInlineElement"/>
</xs:schema>
