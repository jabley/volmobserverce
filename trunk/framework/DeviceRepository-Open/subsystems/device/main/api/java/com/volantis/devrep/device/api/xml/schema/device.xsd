<?xml version="1.0" encoding="UTF-8"?>
<!--
This file is part of Volantis Mobility Server. 

Volantis Mobility Server is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Volantis Mobility Server is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Volantis Mobility Server.  If not, see <http://www.gnu.org/licenses/>. 
-->

<!-- edited with XMLSPY v2004 rel. 3 U (http://www.xmlspy.com) by Paul Duffin (Volantis Systems Ltd) -->
<xs:schema targetNamespace="http://www.volantis.com/xmlns/device-repository/device" xmlns="http://www.volantis.com/xmlns/device-repository/device" xmlns:pv="http://www.volantis.com/xmlns/device-repository/device-policies" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:dev="http://www.volantis.com/xmlns/device-repository/device" elementFormDefault="qualified" attributeFormDefault="unqualified">
    <xs:include schemaLocation="device-core.xsd"/>
    <xs:attributeGroup name="ValueAttribute">
        <xs:attribute name="value" type="xs:string" use="optional"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="NameAttribute">
        <xs:attribute name="name" type="DevicePolicyNameType" use="required"/>
    </xs:attributeGroup>
    <xs:complexType name="FieldType">
        <xs:choice>
            <xs:element ref="value" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
        <xs:attributeGroup ref="ValueAttribute"/>
        <xs:attributeGroup ref="NameAttribute"/>
    </xs:complexType>
    <xs:complexType name="UninheritableValueType">
        <xs:choice>
            <xs:element ref="value" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="field" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
        <xs:attributeGroup ref="ValueAttribute"/>
    </xs:complexType>
    <xs:complexType name="UnnamedValueType">
        <xs:choice>
            <xs:element ref="value" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="field" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="inherit" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Indicates that the policy value is inherited from the parent device.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="ValueAttribute"/>
    </xs:complexType>
    <xs:complexType name="NamedValueType">
        <xs:complexContent>
            <xs:extension base="dev:UnnamedValueType">
                <xs:attributeGroup ref="NameAttribute"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="PolicyType">
        <xs:complexContent>
            <xs:extension base="dev:NamedValueType">
                <xs:attributeGroup ref="CommonAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="device">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="policies"/>
            </xs:sequence>
            <xs:attributeGroup ref="CommonAttributes"/>
            <xs:attribute name="name" type="DeviceNameType" use="optional"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="policies">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="policy" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
        <xs:key name="PolicyNameKey">
            <xs:selector xpath="dev:policy"/>
            <xs:field xpath="@name"/>
        </xs:key>
    </xs:element>
    <xs:element name="policy">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="dev:PolicyType">
                    <xs:sequence>
                        <xs:element name="standard" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation>The standard value of this policy. This is only present if the customer has changed the value of a standard policy of a standard device.</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="policy" type="dev:PolicyType" minOccurs="0"/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
        <xs:unique name="UniquePolicyValue">
            <xs:selector xpath="./dev:value"/>
            <xs:field xpath="."/>
        </xs:unique>
        <xs:unique name="UniquePolicyField">
            <xs:selector xpath="./dev:field"/>
            <xs:field xpath="@name"/>
        </xs:unique>
    </xs:element>
    <xs:element name="value" type="xs:string"/>
    <xs:element name="field" type="dev:FieldType">
        <xs:unique name="UniqueFieldValue">
            <xs:selector xpath="./dev:value"/>
            <xs:field xpath="."/>
        </xs:unique>
    </xs:element>
</xs:schema>

<!--
 ===========================================================================
 Change History
 ===========================================================================
 $Log$

 13-May-04	4351/1	allan	VBM:2004051011 Fix NullPointerException in StandardElementHandler

 ===========================================================================
-->
