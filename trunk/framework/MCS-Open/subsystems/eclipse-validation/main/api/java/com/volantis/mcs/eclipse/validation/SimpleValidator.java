/*
This file is part of Volantis Mobility Server. 

Volantis Mobility Server is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Volantis Mobility Server is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Volantis Mobility Server.  If not, see <http://www.gnu.org/licenses/>. 
*/
/* ----------------------------------------------------------------------------
 * (c) Volantis Systems Ltd 2000. 
 * ----------------------------------------------------------------------------
 */
package com.volantis.mcs.eclipse.validation;

import com.volantis.mcs.utilities.FaultTypes;
import org.eclipse.core.runtime.Status;

/**
 * A class that can be validate objects. This implementation validates the
 * result of Object.toString() against min and max character lengths i.e. this
 * is class provides basic validation. For more complex validation sub-classes
 * should be created.
 */
public class SimpleValidator implements Validator {
    /**
     * The maximum number of characters allowed in this document.
     */
    private int maxChars = -1;

    /**
     * The minimum number of characters allows in this document.
     */
    private int minChars;

    /**
     * The status to be returned on empty fields if minChars is greater than 0.
     */
    private int statusOnEmpty = Status.INFO;

    /**
     * Construct new SimpleValidator with no max or min chars settings.
     */
    protected SimpleValidator() {
    }

    /**
     * Construct a new SimpleValidator.
     * @param minChars The minumum number of characters that are valid.
     * @param maxChars The maximum number of characters that are valid. A value
     * of -1 indicates that there is no maximum.
     */
    public SimpleValidator(int minChars, int maxChars) {
        setMaxChars(maxChars);
        setMinChars(minChars);
    }

    /**
     * Set the min chars that are valid.
     * @param minChars The minimum number of chars that are valid.
     */
    public void setMinChars(int minChars) {
        this.minChars = minChars;
    }


    /**
     * Set the min chars that are valid.
     * @param maxChars The maximum number of chars that are valid. A value
     * of -1 indicates that there is no maximum
     */
    public void setMaxChars(int maxChars) {
        this.maxChars = maxChars;
    }


    /**
     * Get the minimum chars that are valid.
     * @return minChars
     */
    protected int getMinChars() {
        return minChars;
    }

    /**
     * Get the maximum chars that are valid.
     * @return maxChars
     */
    protected int getMaxChars() {
        return maxChars;
    }

    /**
     * Defines the status to be used when the minimum number of characters is
     * greater than 0, but the input field is empty.
     *
     * @param statusOnEmpty the status to be returned on empty fields
     * if minChars is greater than 0
     */
    public void setStatusOnEmpty(final int statusOnEmpty) {
        this.statusOnEmpty = statusOnEmpty;
    }

    /**
     * Validate the given object using the specified
     * ValidationMessageBuilder. The fault types and message format args
     * generated by this validate method are as follows:
     *
     * Fault type: TOO_MANY_CHARACTERS; args object, maximum characters allowed
     * Fault type: TOO_FEW_CHARACTERS; args object, minumum characters allowed
     * Fault type: CANNOT_BE_NULL; args object
     * @throws IllegalArgumentException If messageBuilder is null.
     */
    // rest of javadoc inherited
    public ValidationStatus validate(Object object,
                                     ValidationMessageBuilder messageBuilder) {

        if (messageBuilder == null) {
            throw new IllegalArgumentException("messageBuilder is null"); //$NON-NLS-1$
        }

        String text = (object != null) ? object.toString() : ""; //$NON-NLS-1$
        String messageKey = null;
        int severity = Status.OK;
        String message = null;

        if (maxChars != -1 && (text.length()) > maxChars) {
            messageKey = FaultTypes.TOO_MANY_CHARACTERS;
            severity = Status.ERROR;
        }
        if (minChars > 0) {
            int bufferLength = text.length();
            if (bufferLength > 0 && bufferLength < minChars) {
                messageKey = (FaultTypes.TOO_FEW_CHARACTERS);
                severity = Status.ERROR;
            } else if (bufferLength < minChars) {
                messageKey = FaultTypes.CANNOT_BE_NULL;
                severity = statusOnEmpty;
            }
        }

        if (messageKey != null) {

            Object formatArgs [] = new Object[2];

            int i = 0;
            formatArgs[i++] = object;
            if (FaultTypes.TOO_MANY_CHARACTERS.equals(messageKey)) {
                formatArgs[i] = String.valueOf(maxChars);
            } else if (FaultTypes.TOO_FEW_CHARACTERS.equals(messageKey)) {
                formatArgs[i] = String.valueOf(minChars);
            }

            message = messageBuilder.buildValidationMessage(messageKey,
                    formatArgs);
        }

        return new ValidationStatus(severity, message);
    }
}

/*
 ===========================================================================
 Change History
 ===========================================================================
 $Log$

 21-Dec-04	6524/1	allan	VBM:2004112610 Move xpath and xml validation out of eclipse

 08-Dec-04	6416/3	ianw	VBM:2004120703 New Build

 08-Dec-04	6416/1	ianw	VBM:2004120703 New Build

 27-Feb-04	3200/3	allan	VBM:2004022410 Basic Update Client Wizard.

 18-Feb-04	3068/1	allan	VBM:2004021115 Validate fallback extensions in wizards.

 03-Feb-04	2820/1	doug	VBM:2004013002 Used the eclipse 'externalize strings wizard' to identify language specific resources

 21-Oct-03	1502/1	allan	VBM:2003092202 Don't validate extension when minChars is < 1.

 10-Oct-03	1512/1	allan	VBM:2003100702 Generic policy wizard with first wizard page

 03-Oct-03	1444/1	allan	VBM:2003091903 Port the validation framework to an Eclipse plugin

 ===========================================================================
*/
