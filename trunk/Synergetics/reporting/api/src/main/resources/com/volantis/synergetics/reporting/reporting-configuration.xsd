<?xml version="1.0" encoding="UTF-8"?>
<!--
This file is part of Volantis Mobility Server. 

Volantis Mobility Server is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Volantis Mobility Server is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Volantis Mobility Server.  If not, see <http://www.gnu.org/licenses/>. 
-->

<xs:schema xmlns="http://www.volantis.com/xmlns/2005/10/storefront/reporting-configuration" xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://www.volantis.com/xmlns/2005/10/storefront/reporting-configuration"
    elementFormDefault="qualified" attributeFormDefault="unqualified"
    xmlns:rep="http://www.volantis.com/xmlns/2005/10/storefront/reporting-configuration">

    <xs:simpleType name="JavaClassName">
        <xs:restriction base="xs:string">
            <xs:pattern value="\p{L}(\p{L}|\p{N})*(\.\p{L}(\p{L}|\p{N})*)*($\p{L}(\p{L}|\p{N})*)*"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="EventType">
        <xs:annotation>
            <xs:documentation>
                Supported report event types. 
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="start"/>
            <xs:enumeration value="stop"/>
            <xs:enumeration value="update"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="MetricOperation">
        <xs:annotation>
            <xs:documentation>
                Comparision types allowed to define metric type exclusions 
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="starts-with"/>
            <xs:enumeration value="contains"/>
            <xs:enumeration value="equals"/>
            <xs:enumeration value="ends-with"/>
            <xs:enumeration value="matches"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:element name="reporting-config">
        <xs:annotation>
            <xs:documentation>
                The root node of the reporting configuration file.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:annotation>
                    <xs:documentation>
                        The configuration contains definitions of JDBC datasources and the reports
                        that can be generated (be they to JDBC datasources or other targets, based
                        on the type of report).
                    </xs:documentation>
                </xs:annotation>
                <xs:sequence>
                    <xs:sequence minOccurs="0" maxOccurs="unbounded">
                        <xs:choice>
                            <xs:element ref="jdbc-datasource"/>
                            <xs:element ref="internal-pool-datasource"/>
                            <xs:element ref="jndi-datasource"/>
                        </xs:choice>
                    </xs:sequence>
                    <xs:element ref="report" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:sequence>
        </xs:complexType>
        <xs:key name="JDBCDataSourceNamesRef">
            <xs:selector xpath="./rep:jdbc-datasource/rep:name | ./rep:internal-pool-datasource/rep:name  | ./rep:jndi-datasource/rep:name"/>
            <xs:field xpath="."/>
        </xs:key>
        <xs:keyref name="JDBCDataSourceNamesReference" refer="JDBCDataSourceNamesRef">
            <xs:selector xpath="./rep:report/rep:sql-handler/rep:datasource-name"></xs:selector>
            <xs:field xpath="."></xs:field>
        </xs:keyref>
    </xs:element>

    <xs:element name="report">
        <xs:annotation>
            <xs:documentation>
                This element represents the configuration for a report used in the application.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:annotation>
                    <xs:documentation>
                        Report element contains optional exclusions and one mandatory event handler.
                    </xs:documentation>
                </xs:annotation>
                <xs:element ref="exclusions" minOccurs="0" maxOccurs="1"/>
                <xs:choice>
                    <xs:element ref="sql-handler"/>
                    <xs:element ref="generic-handler"/>
                </xs:choice>
            </xs:sequence>
            <xs:attribute name="enabled" type="xs:boolean" default="true">
                <xs:annotation>
                    <xs:documentation>
                        Indicate that this report should be enabled.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="binding" type="xs:string" use="required">
                <xs:annotation>
                    <xs:documentation>
                        The binding key for report handler which handles the events
                        from DynamicReport

                        OR

                        The name of the interface generating the report events that this
                        handler is to handle. Note that this must identify a public interface
                        derived from the com.volantis.synergetics.reporting.Report interface.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="generic-handler">
        <xs:annotation>
            <xs:documentation>
                This handler specifies that reports should be written via generic
                handler implementation instances.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence minOccurs="0" maxOccurs="unbounded">
                <xs:element name="param">
                    <xs:annotation>
                        <xs:documentation>
                            A parameter to be passed to the general handler.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="name" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        The name of the parameter.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="value" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        The value of the parameter.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="class" type="JavaClassName" use="required">
                <xs:annotation>
                    <xs:documentation>
                        The class name of the class that will be loaded to implement this
                        handler. This class must be public and implement the
                        com.volantis.synergetics.reporting.Handler. The constructor must
                        be public and must take a single Map argument. The map will be
                        populated from the parameters in this configuration.
                    </xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="sql-handler">
        <xs:annotation>
            <xs:documentation>
                This handler specifies that reports should be written via the
                built-in SQL handler's instances.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="table-name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            The name of the database table that the report interface will be written to.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:sequence>
                    <xs:element ref="column-mapping" maxOccurs="unbounded">
                        <xs:annotation>
                            <xs:documentation>
                                A set of mappings must be provided that map metric names to column
                                names in the names DB table specified. If a mapping is not specified for
                                a metric that exists on the named interface then that metric will not be
                                recorded in the database.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:element name="datasource-name" type="xs:NCName">
                    <xs:annotation>
                        <xs:documentation>
                            A reference to the jdbc data source we will write logs to.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="column-mapping">
        <xs:annotation>
            <xs:documentation>
                This element defines a mapping from a metric name to a column in the
                database table
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="metric" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            The name of the metric defined in the reporting interface.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="column" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            The name of the column in the database to which the metric will map.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="jdbc-datasource">
        <xs:annotation>
            <xs:documentation>
                Permits a JDBC datasource configuration to be supplied. This can be shared
                across a number of SQL handlers.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="name" type="xs:NCName">
                    <xs:annotation>
                        <xs:documentation>
                            The name identifying the JDBC data source.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="driver-class" type="JavaClassName">
                    <xs:annotation>
                        <xs:documentation>
                            The class name of the JDBC driver to use.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="connection-string" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            The string used to connect to the database, for example:
                            jdbc:mysql://192.168.1.100/reporting?user=reporter&amp;password=reporter&amp;database=reports
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="internal-pool-datasource">
        <xs:annotation>
            <xs:documentation>
                Permits a pooled datasource configuration to be supplied. This can be shared
                across a number of SQL handlers.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="name" type="xs:NCName">
                    <xs:annotation>
                        <xs:documentation>
                            The name identifying the JDBC data source.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="driver-class" type="JavaClassName">
                    <xs:annotation>
                        <xs:documentation>
                            The class name of the JDBC driver to use.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="url" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            The string used to connect to the database, for example:
                            jdbc:mysql://192.168.1.100/reporting?database=reports
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="username" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Database user name
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="password" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            Database user password
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="max-active" type="xs:integer">
                    <xs:annotation>
                        <xs:documentation>
                            Maximum active connections
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="max-idle" type="xs:integer">
                    <xs:annotation>
                        <xs:documentation>
                            Maximum idle connections
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="max-wait" type="xs:integer">
                    <xs:annotation>
                        <xs:documentation>
                            Maximum time before connection timeout in miliseconds
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="jndi-datasource">
        <xs:annotation>
            <xs:documentation>
                Permits a JNDI datasource configuration to be supplied. This can be shared
                across a number of SQL handlers.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="name" type="xs:NCName">
                    <xs:annotation>
                        <xs:documentation>
                            The name identifying the JDBC data source.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="jndi-name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>
                            The JNDI name of datasource.
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="exclusions">
        <xs:annotation>
            <xs:documentation>
                Exclusions for report. All events that match at least one of defined exclusions
                will not be reported.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:annotation>
                    <xs:documentation>
                        List of event type and metric exclusions. Empty exlusion list suppored.
                    </xs:documentation>
                </xs:annotation>
                <xs:element ref="event" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="metric" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="event">
        <xs:annotation>
            <xs:documentation>
                Event type excluded from being reported.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="type" type="EventType"  use="required"/>
        </xs:complexType>
    </xs:element>

    <xs:element name="metric">
        <xs:annotation>
            <xs:documentation>
                Event with metric of defined value excluded from reporting.
                Supported operations to compare: starts-with, ends-with, equals, contains and matches
                Ignore case comparison allowed for all operation types.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="name" type="xs:string"  use="required"/>
            <xs:attribute name="operation" type="MetricOperation"  use="required"/>
            <xs:attribute name="value" type="xs:string"  use="required"/>
            <xs:attribute name="ignore-case" type="xs:boolean"  use="optional" default="false"/>
        </xs:complexType>
    </xs:element>
</xs:schema>
