/*
This file is part of Volantis Mobility Server. 

Volantis Mobility Server is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Volantis Mobility Server is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Volantis Mobility Server.  If not, see <http://www.gnu.org/licenses/>. 
*/
/* ----------------------------------------------------------------------------
 * This code was automatically generated by PropertyValueLookupUtilities
 * on 3/14/08 7:12 PM
 *
 * YOU MUST NOT MODIFY THIS FILE
 * ----------------------------------------------------------------------------
 */

package com.volantis.mcs.assets;

import java.util.HashMap;
import java.util.Map;

public class AssetGroupUtilities {

  /**
   * An array of the allowable values for the abstract cacheable repository
   * object cacheThisPolicy.
   */
  private static Object [] cacheThisPolicyArray;

  /**
   * An array of the allowable values for the abstract cacheable repository
   * object retainDuringRetry.
   */
  private static Object [] retainDuringRetryArray;

  /**
   * An array of the allowable values for the abstract cacheable repository
   * object retryFailedRetrieval.
   */
  private static Object [] retryFailedRetrievalArray;

  /**
   * An array of the allowable values for the asset group locationType.
   */
  private static Object [] locationTypeArray;

  /**
   * A bidirectional map between internal and external representations of the
   * asset group locationType.
   */
  private static Map locationTypeMap;

  static {
    Object internal;
    String external;

    cacheThisPolicyArray = new Boolean [] {
      new Boolean ("false"),
      new Boolean ("true"),
    };

    retainDuringRetryArray = new Boolean [] {
      new Boolean ("false"),
      new Boolean ("true"),
    };

    retryFailedRetrievalArray = new Boolean [] {
      new Boolean ("false"),
      new Boolean ("true"),
    };

    locationTypeArray = new Integer [] {
      new Integer (AssetGroup.ON_SERVER),
      new Integer (AssetGroup.ON_DEVICE),
    };

    locationTypeMap = new HashMap ();

    external = "server";
    locationTypeMap.put (locationTypeArray [0], external);
    locationTypeMap.put (external, locationTypeArray [0]);

    external = "device";
    locationTypeMap.put (locationTypeArray [1], external);
    locationTypeMap.put (external, locationTypeArray [1]);
  }

  public static Object [] getCacheThisPolicyArray () {
    return cacheThisPolicyArray;
  }

  public static Object [] getRetainDuringRetryArray () {
    return retainDuringRetryArray;
  }

  public static Object [] getRetryFailedRetrievalArray () {
    return retryFailedRetrievalArray;
  }

  public static Object [] getLocationTypeArray () {
    return locationTypeArray;
  }

  public static Map getLocationTypeMap () {
    return locationTypeMap;
  }
}
