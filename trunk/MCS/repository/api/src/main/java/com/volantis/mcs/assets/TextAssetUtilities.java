/*
This file is part of Volantis Mobility Server. 

Volantis Mobility Server is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Volantis Mobility Server is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Volantis Mobility Server.  If not, see <http://www.gnu.org/licenses/>. 
*/
/* ----------------------------------------------------------------------------
 * This code was automatically generated by PropertyValueLookupUtilities
 * on 3/14/08 7:12 PM
 *
 * YOU MUST NOT MODIFY THIS FILE
 * ----------------------------------------------------------------------------
 */

package com.volantis.mcs.assets;

import java.util.HashMap;
import java.util.Map;

public class TextAssetUtilities {

  /**
   * An array of the allowable values for the text asset valueType.
   */
  private static Object [] valueTypeArray;

  /**
   * A bidirectional map between internal and external representations of the
   * text asset valueType.
   */
  private static Map valueTypeMap;

  /**
   * An array of the allowable values for the text asset encoding.
   */
  private static Object [] encodingArray;

  /**
   * A bidirectional map between internal and external representations of the
   * text asset encoding.
   */
  private static Map encodingMap;

  static {
    Object internal;
    String external;

    valueTypeArray = new Integer [] {
      new Integer (TextAsset.URL),
      new Integer (TextAsset.LITERAL),
    };

    valueTypeMap = new HashMap ();

    external = "url";
    valueTypeMap.put (valueTypeArray [0], external);
    valueTypeMap.put (external, valueTypeArray [0]);

    external = "literal";
    valueTypeMap.put (valueTypeArray [1], external);
    valueTypeMap.put (external, valueTypeArray [1]);

    encodingArray = new Integer [] {
      new Integer (TextAsset.PLAIN),
      new Integer (TextAsset.VT_MARKUP),
      new Integer (TextAsset.XML_MARKUP),
      new Integer (TextAsset.VOICEXML_HELP),
      new Integer (TextAsset.VOICEXML_PROMPT),
      new Integer (TextAsset.VOICEXML_ERROR),
      new Integer (TextAsset.VOICEXML_NUANCE_GRAMMAR),
      new Integer (TextAsset.FORM_VALIDATOR),
    };

    encodingMap = new HashMap ();

    external = "plain";
    encodingMap.put (encodingArray [0], external);
    encodingMap.put (external, encodingArray [0]);

    external = "volantisMarkup";
    encodingMap.put (encodingArray [1], external);
    encodingMap.put (external, encodingArray [1]);

    external = "xmlMarkup";
    encodingMap.put (encodingArray [2], external);
    encodingMap.put (external, encodingArray [2]);

    external = "voiceXMLHelp";
    encodingMap.put (encodingArray [3], external);
    encodingMap.put (external, encodingArray [3]);

    external = "voiceXMLPrompt";
    encodingMap.put (encodingArray [4], external);
    encodingMap.put (external, encodingArray [4]);

    external = "voiceXMLError";
    encodingMap.put (encodingArray [5], external);
    encodingMap.put (external, encodingArray [5]);

    external = "voiceXMLNuanceGrammar";
    encodingMap.put (encodingArray [6], external);
    encodingMap.put (external, encodingArray [6]);

    external = "formValidator";
    encodingMap.put (encodingArray [7], external);
    encodingMap.put (external, encodingArray [7]);
  }

  public static Object [] getValueTypeArray () {
    return valueTypeArray;
  }

  public static Map getValueTypeMap () {
    return valueTypeMap;
  }

  public static Object [] getEncodingArray () {
    return encodingArray;
  }

  public static Map getEncodingMap () {
    return encodingMap;
  }
}
