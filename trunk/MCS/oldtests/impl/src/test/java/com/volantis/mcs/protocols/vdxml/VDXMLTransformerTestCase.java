/*
This file is part of Volantis Mobility Server. 

Volantis Mobility Server is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Volantis Mobility Server is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Volantis Mobility Server.  If not, see <http://www.gnu.org/licenses/>. 
*/
/* ----------------------------------------------------------------------------
 * (c) Volantis Systems Ltd 2004. 
 * ----------------------------------------------------------------------------
 */
package com.volantis.mcs.protocols.vdxml;

import com.volantis.mcs.devices.InternalDeviceTestHelper;
import com.volantis.mcs.devices.InternalDevice;
import com.volantis.mcs.dom.Document;
import com.volantis.mcs.dom.debug.DOMUtilities;
import com.volantis.mcs.protocols.DOMProtocol;
import com.volantis.mcs.protocols.DOMTransformer;
import com.volantis.mcs.protocols.builder.ProtocolBuilder;
import com.volantis.mcs.protocols.builder.TestProtocolRegistry;
import com.volantis.synergetics.testtools.TestCaseAbstract;

/**
 * Tests {@link VDXMLTransformerTestCase}.
 */
public class VDXMLTransformerTestCase extends TestCaseAbstract {
    /**
     * Tests nested grids, cell padding, cell spacing and border handling.
     */
    public void testNesting() throws Exception {
        // This is composed of the markup and pseudo markup generated by the
        // protocol
        String input =
                "<VDXML>" +
                    "<grid cell-spacing='1' cell-padding='1' CF='VE'>" +
                        "<row>" +
                            "<cell>" +
                                "<pane cell-padding='2' DX='7' DY='5'>" +
                                    "Some example text" +
                                "</pane>" +
                            "</cell>" +
                            "<cell>" +
                                "<grid cell-spacing='2' cell-padding='2' CF='BU'>" +
                                    "<row>" +
                                        "<cell>" +
                                            "<pane DX='5' DY='3'>a</pane>" +
                                        "</cell>" +
                                        "<cell>" +
                                            "<pane DX='2' DY='4'>b</pane>" +
                                        "</cell>" +
                                    "</row>" +
                                "</grid>" +
                            "</cell>" +
                        "</row>" +
                        "<row>" +
                            "<cell>" +
                                "<pane cell-padding='0' DX='4' DY='4'>c</pane>" +
                            "</cell>" +
                            "<cell>" +
                                "<pane DX='2' DY='1' border-width='1' border-colour='JA'>d</pane>" +
                            "</cell>" +
                        "</row>" +
                    "</grid>" +
                "</VDXML>";

        // This is composed of pure VDXML markup (at least to the level of the
        // TEXTE elements)
        String expected =
                "<VDXML>" +
                    "<FRAME CF='VE' DX='35' DY='20' X='1' Y='1'/>" +
                    "<FRAME CF='BU' DX='21' DY='12' X='14' Y='2'/>" +
                    "<TEXTE DX='7' DY='5' X='4' Y='4'>Some example text</TEXTE>" +
                    "<TEXTE DX='5' DY='3' X='18' Y='6'>a</TEXTE>" +
                    "<TEXTE DX='2' DY='4' X='29' Y='6'>b</TEXTE>" +
                    "<TEXTE DX='4' DY='4' X='2' Y='15'>c</TEXTE>" +
                    "<CADREP CBD='VE' CBG='VE' CBI='JA' CF='VE' DX='6' DY='5' LBG='0' X='14' Y='15'/>" +
                    "<TEXTE DX='2' DY='1' X='16' Y='17'>d</TEXTE>" +
                "</VDXML>";

        doTest(input, expected);
    }

    /**
     * A simple test to verify that the simplest layout will transform
     * correctly.
     */
    public void testTopLevelPane() throws Exception {
        String input =
                "<VDXML>" +
                    "<pane cell-padding='4' DX='10' DY='7'>" +
                        "Some example text" +
                    "</pane>" +
                "</VDXML>";
        String expected =
                "<VDXML>" +
                    "<TEXTE X='5' Y='5' DX='10' DY='7'>" +
                        "Some example text" +
                    "</TEXTE>" +
                "</VDXML>";

        doTest(input, expected);
    }

    /**
     * Actually does the test given the specified input markup and the expected
     * output markup.
     *
     * @param input the markup (including real and pseudo markup)
     * @param expected the expected VDXML markup
     */
    protected void doTest(String input, String expected) throws Exception {

        InternalDevice internalDevice = InternalDeviceTestHelper.createTestDevice();

        ProtocolBuilder builder = new ProtocolBuilder();
        DOMProtocol protocol = (DOMProtocol) builder.build(
                new TestProtocolRegistry.TestDOMProtocolFactory(),
                internalDevice);

        Document document = DOMUtilities.read(DOMUtilities.getReader(),
                                              input);

        createTransformer().transform(protocol, document);

        String actual = DOMUtilities.toString(
                document, protocol.getCharacterEncoder());
        expected = DOMUtilities.provideDOMNormalizedString(
                expected, protocol.getCharacterEncoder());

        assertEquals("input: " + expected + " actual: " + actual,
                     expected,
                     actual);
    }

    /**
     * Factory method used to create the required transformer for testing.
     *
     * @return the transformer to be tested
     */
    protected DOMTransformer createTransformer() {
        return new VDXMLTransformer(null);
    }
}

/*
 ===========================================================================
 Change History
 ===========================================================================
 $Log$

 01-Sep-05	9375/1	geoff	VBM:2005082301 XDIMECP: clean up protocol creation

 05-May-05	8005/1	pduffin	VBM:2005050404 Separated DOM from within runtime into its own subsystem, move concrete DOM objects out of API, replaced with interfaces and factories, removed pooling

 23-Sep-04	5599/1	geoff	VBM:2004092214 Port VDXML to MCS: port existing protocol code

 27-May-04	4483/6	philws	VBM:2004051807 Better colour handling

 27-May-04	4483/4	philws	VBM:2004051807 Initial end-to-end layout rendering

 27-May-04	4483/1	philws	VBM:2004051807 Functional layout transformer

 ===========================================================================
*/
