
Widget.TableBodyResponse=Class.define({initialize:function(totalRowsCount,content){this.totalRowsCount=totalRowsCount;this.rows=[];var element=document.createElement("div");element.innerHTML="<table><tbody>"+content+"</tbody></table>";var children=element.firstChild.firstChild.childNodes;for(var i=0;i<children.length;i++){var node=children.item(i);if(node.nodeType==1&&node.tagName.toLowerCase()=="tr"){this.rows.push(node);}}},getTotalRowsCount:function(){return this.totalRowsCount;},getRows:function(){return this.rows;}});Widget.TableBodyLoad=Class.define(Widget.Load,{doExecute:function(){if(this.owner!=null){this.owner._load();}}});Widget.TableBody=Widget.define({rows:null,rowsPerPage:null,load:null,query:null,sortColumnNumber:null,sortOrder:null,cachedPagesCount:0,initialize:function(id,options){this.initializeWidget(id,options);if(this.load==null){if(this.rowsPerPage==null){Widget.log("Table","No AJAX + no pagination");this.rows=null;this.rowsCount=this._calculateRowsCount();this.startRowIndex=0;this.endRowIndex=this.rowsCount-1;}else{Widget.log("Table","No AJAX + pagination");this.rows=this._retrieveRows();this.rowsCount=this.rows.length;this._gotoRow(0);}}else{this.client=new Widget.Internal.Client();this.observe(this.client,"requestSucceededWithoutError","_clientRequestSucceededWithoutError");this.observe(this.client,"requestSucceededWithError","_clientRequestSucceededWithError");this.observe(this.client,"requestFailed","_clientRequestFailed");this.load.setOwner(this);if(this._widgetId==null){Widget.register(Math.random().toString(),this.load);}
if(this.rowsPerPage==null){Widget.log("Table","AJAX + no pagination");this.rows=null;this.rowsCount=this._calculateRowsCount();this.startRowIndex=0;this.endRowIndex=this.rowsCount-1;}else{Widget.log("Table","AJAX + pagination");this.rows=null;this.rowsCount=this._calculateRowsCount();this.bufferedPageRows=[];this.bufferedPageIndices=0;this.maxBufferedPagesCount=(this.cachedPagesCount<2)?2:this.cachedPagesCount;this.startRowIndex=0;this.endRowIndex=this.rowsCount-1;}
if(this.load.getWhen()=="onload"){this.load.execute();}}
this.addAction("next-page");this.addAction("previous-page");this.addAction("next-row");this.addAction("previous-row");this.addAction("first-page");this.addAction("last-page");this.addProperty("rows-count");this.addProperty("start-row-number");this.addProperty("end-row-number");this.addProperty("load",{type:"widget"});this.addProperty("load-error-message");},getRowsCount:function(){return this.rowsCount;},nextPage:function(){this.setStartRowNumber(this.getStartRowNumber()+this.rowsPerPage);},canNextPage:function(){return(this.rowsPerPage!=null)&&this._isRowNumberValid(this.getStartRowNumber()+this.rowsPerPage);},previousPage:function(){this.setStartRowNumber(this.getStartRowNumber()-this.rowsPerPage);},canPreviousPage:function(){return(this.rowsPerPage!=null)&&(this.getStartRowNumber()>1);},nextRow:function(){this.setStartRowNumber(this.getStartRowNumber()+1);},canNextRow:function(){return(this.rowsPerPage!=null)&&this._isRowNumberValid(this.getEndRowNumber()+1);},previousRow:function(){this.setStartRowNumber(this.getStartRowNumber()-1);},canPreviousRow:function(){return(this.rowsPerPage!=null)&&(this.getStartRowNumber()>1);},firstPage:function(){this.setStartRowNumber(1);},canFirstPage:function(){return(this.rowsPerPage!=null)&&(this.getStartRowNumber()>1);},lastPage:function(){if(this.canLastPage()){this.setEndRowNumber(this.rowsCount);}},canLastPage:function(){return(this.rowsPerPage!=null)&&(this.rowsCount!=null)&&(this.getEndRowNumber()!=this.rowsCount);},getStartRowNumber:function(){return this.startRowIndex+1;},setStartRowNumber:function(number){if(this.rowsPerPage==null){}else{this._gotoRow(number-1);}},getEndRowNumber:function(){return this.endRowIndex+1;},setEndRowNumber:function(number){if(this.rowsPerPage==null){}else{this._gotoRow(number-this.rowsPerPage);}},getLoad:function(){return this.load;},getLoadErrorMessage:function(){return this.loadErrorMessage;},_setStartRowIndex:function(index){if(this.startRowIndex!=index){this.startRowIndex=index;this.notifyObservers("startRowNumberChanged");this.notifyObservers("endRowNumberChanged");this.notifyObservers("canNextPageChanged");this.notifyObservers("canPreviousPageChanged");this.notifyObservers("canNextRowChanged");this.notifyObservers("canPreviousRowChanged");this.notifyObservers("canFirstPageChanged");this.notifyObservers("canLastPageChanged");}},_setEndRowIndex:function(index){if(this.endRowIndex!=index){this.endRowIndex=index;this.notifyObservers("startRowNumberChanged");this.notifyObservers("endRowNumberChanged");this.notifyObservers("canNextPageChanged");this.notifyObservers("canPreviousPageChanged");this.notifyObservers("canNextRowChanged");this.notifyObservers("canPreviousRowChanged");this.notifyObservers("canFirstPageChanged");this.notifyObservers("canLastPageChanged");}},_setRowsCount:function(count){if(this.rowsCount!=count){this.rowsCount=count;this.notifyObservers("rowsCountChanged");this.notifyObservers("canNextPageChanged");this.notifyObservers("canPreviousPageChanged");this.notifyObservers("canNextRowChanged");this.notifyObservers("canPreviousRowChanged");}},_gotoRow:function(index,forceFullPage){index=this._validateStartRowIndex(index,forceFullPage);this._requestRows(index,this._gotoRowHandler.bind(this,index));},_gotoRowHandler:function(index,rows){if(rows.length>0){this._setStartRowIndex(index);this._setEndRowIndex(index+rows.length-1);this._replaceRows(rows);}},_validateStartRowIndex:function(index,forceFullPage){if(this.rowsCount!=null){if(index>=this.rowsCount){index=this.rowsCount-1;}
if(forceFullPage&&index>this.rowsCount-this.rowsPerPage){index=this.rowsCount-this.rowsPerPage;}}
if(index<0){index=0;}
return index;},_load:function(){Widget.log("Table","(Re)loading table rows...");this.loadQuery=this.query;this.loadSortColumnNumber=this.sortColumnNumber;this.loadSortOrder=this.sortOrder;if(this.rowsPerPage==null){this._sendClientRequest(null,null,this._replaceRows.bind(this));}else{Widget.log("Table","Clearing buffer...");this.bufferedPageRows=[];this.bufferedPageIndices=[];this._gotoRow(0);}},_isRowNumberValid:function(number){var rowsCount=this.getRowsCount();return(number>0)&&((rowsCount==null)?true:number<=rowsCount);},_replaceRows:function(rows){var body=this.getElement();var continueLoop=true;while(continueLoop){var lastChild=body.lastChild;if(lastChild==null){continueLoop=false;}else if(lastChild.nodeType==1&&lastChild.tagName.toLowerCase()=="tr"){body.removeChild(lastChild);}else if(lastChild.nodeType==3){body.removeChild(lastChild);}else{continueLoop=false;}}
for(var i=0;i<rows.length;i++){body.appendChild(rows[i]);}},_calculateRowsCount:function(){var count=0;var nodes=this.getElement().childNodes;for(var i=0;i<nodes.length;i++){var node=nodes.item(i);if(node.nodeType==1&&node.tagName.toLowerCase()=="tr"){count++;}}
return count;},_retrieveRows:function(){var rows=[];var nodes=this.getElement().childNodes;for(var i=0;i<nodes.length;i++){var node=nodes.item(i);if(node.nodeType==1&&node.tagName.toLowerCase()=="tr"){rows.push(node);}}
return rows;},_requestRows:function(startRowIndex,handler){Widget.log("Table","Requesting "+this.rowsPerPage+" rows from index "+startRowIndex+"...");var endRowIndex=startRowIndex+this.rowsPerPage-1;if(this.load==null){Widget.log("Table","No AJAX, so rows are already in place.");handler(this.rows.slice(startRowIndex,endRowIndex+1));}else{var startPageIndex=this._getPageIndexFor(startRowIndex);var endPageIndex=this._getPageIndexFor(endRowIndex);if(startPageIndex==endPageIndex){Widget.log("Table","Requested rows span 1 page.");this._requestPageRows(startPageIndex,handler);}else{Widget.log("Table","Requested rows span 2 pages.");this._requestPageRows(startPageIndex,this._requestRowsPartialHandler.bind(this,startRowIndex,startPageIndex,handler));}}},_requestRowsPartialHandler:function(startRowIndex,startPageIndex,handler,startPageRows){var endRowIndex=startRowIndex+this.rowsPerPage-1;var endPageIndex=this._getPageIndexFor(endRowIndex);this._requestPageRows(endPageIndex,this._requestRowsHandler.bind(this,startRowIndex,endPageIndex,handler,startPageRows));},_requestRowsHandler:function(startRowIndex,endPageIndex,handler,startPageRows,endPageRows){handler(startPageRows.slice(startRowIndex%this.rowsPerPage).concat(endPageRows.slice(0,startRowIndex%this.rowsPerPage)));},_requestPageRows:function(index,handler){Widget.log("Table","Requesting rows for page "+index+"...");var rows=this._getBufferedPageRows(index);if(rows!==null&&rows!==undefined){Widget.log("Table","Page "+index+" is already buffered.");handler(rows);}else{Widget.log("Table","Page "+index+" is not buffered.");this._sendClientRequest(index*this.rowsPerPage,this.rowsPerPage,this._requestPageRowsHandler.bind(this,index,handler));}},_requestPageRowsHandler:function(index,handler,rows){this._addBufferedPage(index,rows);handler(rows);},_sendClientRequest:function(startRowIndex,rowsCount,handler){if(this.client.isBusy()){return;}
this.ajaxRequestHandler=handler;var parameters={};var loadSortColumnNumber=(this.loadSortColumnNumber!==undefined)?this.loadSortColumnNumber:null;var loadSortOrder=(this.loadSortOrder!==undefined)?this.loadSortOrder:null;if(startRowIndex!=null){parameters['mcs-start']=startRowIndex+1;}
if(rowsCount!=null){parameters['mcs-count']=rowsCount;}
if(this.loadQuery!=null){parameters['mcs-query']=this.loadQuery;}
if(loadSortColumnNumber!==null||loadSortOrder!==null){parameters['mcs-sort-column']=(loadSortColumnNumber!==null?loadSortColumnNumber:"")+
(loadSortOrder!==null?(loadSortOrder=="ascending"?"A":"D"):"");}
this.client.setURL(this.load.getSrc());this.client.setParameters(parameters);Widget.log("Table","Sending AJAX request.");this.client.sendRequest();},_clientRequestSucceededWithoutError:function(response){this._setLoadErrorMessage(null);this._setRowsCount(response.getTotalRowsCount());this.ajaxRequestHandler(response.getRows());},_clientRequestSucceededWithError:function(error){this._setLoadErrorMessage(error.getMessage());},_clientRequestFailed:function(message){},_getPageIndexFor:function(rowIndex){if(this.rowsPerPage!=null){return(rowIndex-(rowIndex%this.rowsPerPage))/this.rowsPerPage;}},_getBufferedPageRows:function(index){for(var i=0;i<this.bufferedPageIndices.length;i++){if(this.bufferedPageIndices[i]==index){return this.bufferedPageRows[i];}}},_isPageBuffered:function(index){for(var i=0;i<this.bufferedPageIndices.length;i++){if(this.bufferedPageIndices[i]==index){return true;}}
return false;},_addBufferedPage:function(index,rows){Widget.log("Table","Adding page "+index+" to buffer");if(this.bufferedPageIndices.length==this.maxBufferedPagesCount){Widget.log("Table","Buffer overflow, page "+this.bufferedPageIndices[0]+" needs to be removed.");this.bufferedPageIndices.splice(0,1);this.bufferedPageRows.splice(0,1);}
this.bufferedPageIndices.push(index);this.bufferedPageRows.push(rows);},_setLoadErrorMessage:function(message){if(this.loadErrorMessage!=message){this.loadErrorMessage=message;this.notifyObservers("loadErrorMessageChanged");}}});Widget.Table=Widget.define({});